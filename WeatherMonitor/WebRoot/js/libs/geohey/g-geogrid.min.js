G.GeoGridUtil={calcIndex:function(i,t,r){if(!(t>180||t<-180||r>90||r<-90)){var e=Math.floor,o=Math.pow(2,i),l=180/o,n=2/o,d=t,a=Math.sin(r/G.MathUtil.DEGREE_PER_RADIAN),c=e(d/l),p=e(a/n);return[c,p]}},getGrid:function(i,t,r){var e=Math.asin,o=Math.pow(2,i),l=180/o,n=2/o,d=t*l,a=r*n,c=(t+1)*l,p=(r+1)*n,g=d,s=e(a)*G.MathUtil.DEGREE_PER_RADIAN,u=c,h=e(p)*G.MathUtil.DEGREE_PER_RADIAN,_=[];return _.push([g,s]),_.push([g,h]),_.push([u,h]),_.push([u,s]),[_]}},G.Layer.GeoGrid=G.Layer.Graphic.extend({options:{gridOutline:!0,gridOutlineColor:"#0f0",gridOutlineWidth:2,gridOutlineOpacity:1,gridFill:!0,gridFillColor:"#000",gridFillOpacity:.3},init:function(i,t,r){var e=this;e.options=G.Util.merge({},e.options,r),G.Layer.Graphic.prototype.init.call(e,r),e._level=i,e._projClass=t,e._grids={}},getLevel:function(){return this._level},getGridByIndex:function(i,t){var r=this,e=(r._level,i+","+t),o=r._grids[e];return o},getGridByLL:function(i,t){var r=this,e=G.GeoGridUtil.calcIndex(r._level,i,t);return r.getGridByIndex(e[0],e[1])},_update:function(){var i=this,t=i._map;if(t._isLoaded()){var r,e,o=i.options,l=t.getCenter(),n=t.getResolution(),d=t.getDrawSize(),a=1+2*t.options.canvasExpandFactor,c=d[0]*a,p=d[1]*a,g=l[0]-c*n/2,s=l[0]+c*n/2,u=l[1]-p*n/2,h=l[1]+p*n/2,_=[g,u,s,h],f=t.options.maxExtent,v=G.ExtentUtil.intersect(_,f),y=i._projClass;y?(r=G.ProjUtil.projectPoint([v[0],v[1]],y.unproject),e=G.ProjUtil.projectPoint([v[2],v[3]],y.unproject)):(r=[v[0],v[1]],e=[v[2],v[3]]);var E,O=Math.max,x=Math.min,U=x(180,O(-180,r[0])),j=x(90,O(-90,r[1])),M=x(180,O(-180,e[0])),P=x(90,O(-90,e[1])),R=i._level,C=G.GeoGridUtil.calcIndex(R,U,j),I=G.GeoGridUtil.calcIndex(R,M,P),D={};for(E in i._grids)D[E]=!0;var F,L,m,A,w,B;for(F=C[0],m=I[0];F<=m;F++)for(L=C[1],A=I[1];L<=A;L++)E=F+","+L,D[E]=!1,i._grids[E]||(w=G.GeoGridUtil.getGrid(R,F,L),y&&(w=G.ProjUtil.projectPolygon(w,y.project)),B=new G.Graphic.Polygon(w,{idx:F,idy:L},{outline:o.gridOutline,outlineColor:o.gridOutlineColor,outlineWidth:o.gridOutlineWidth,outlineOpacity:o.gridOutlineOpacity,fill:o.gridFill,fillColor:o.gridFillColor,fillOpacity:o.gridFillOpacity}),i._grids[E]=B,B.addTo(i));for(E in D)D[E]&&(B=i._grids[E],B&&B.remove(),i._grids[E]=void 0);i._draw()}}});